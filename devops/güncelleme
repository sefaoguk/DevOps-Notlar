 

1- Arkadaşların githubda dev branchine atmış olduğu commitler master branchine merge edilir.


2- Alınan merge jenkins tarafında derlenir. İşlemlerin başarılı olması ve versiyon numaralarının dockerhub’daki ile uyuşması gerekmektedir.


3- Merge edildikten sonra dockerhub’da versiyonların sorunsuz geçip geçmediği kontrol edilir.


4-Dockerhub’daki versiyonlar uyuşuyorsa sunucuya girilir.(ssh ile)


5-yedek almak için sunucundaki gerekli database container'ı durdurulur(docker stop $container_name). Sonrasında dataların bulunduğu ilgili dizine gidilir. Bu dizinde container’ın backup’ı alınır ve yeniden başlatılır. 

	NOT:  ilgili dizin bilinmiyor ise docker inspect $container_name komutu ile mount edilen dizin 
	bulunabilir.

docker ps (database’in sunucuda varlığı kontrol edilir.) 
docker stop $container_name
sudo cp -r .""/media/data/$container_name(yedeği alınacak container'ın konumu)""   ""/media/data/$container_name_$DATE(alınan yedeğin yeni bir isimle kopyalanacağı konum)""
docker start $container_name

6- yml dosyasının olduğu sunucundaki dizinine girilir. Containerlerın komut ile durdurulur.İçerisindeki docker-compose.yml dosyasında versiyon değişikliği yapılır. (Dockerhuba gelmiş olan en son versiyon). Sonrasında containerların çalışması için komut ile tekrar ayağa kaldırılır.

docker-compose -f docker-compose.yml down 
nano docker-compose.yml
docker-compose -f docker-compose.yml up -d
docker ps (kontrol edilebilir.)

	


____________________________________________________________________________________










